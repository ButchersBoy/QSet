<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandDock</name>
    </assembly>
    <members>
        <member name="T:TD.SandDock.Rendering.Office2003Renderer">
            <summary>
            Provides a renderer that mimics the appearance of Microsoft Office 2003.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.ThemeAwareRendererBase">
            <summary>
            Provides a base for renderers that are aware of the current Windows visual style and color scheme.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.RendererBase">
            <summary>
            Provides a base class for renders to drive from.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.ITabControlRenderer">
            <summary>
            An interface defining a set of methods used to draw a tab control.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.DrawFakeTabControlBackgroundExtension(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws a portion of the background of a tab page that is not part of the client area and is not part of the border either.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds of the area to draw.</param>
            <param name="backColor">The background colour of the tab whose background should be drawn.</param>
            <remarks>
            <para>When using the MultipleLine tab layout style, it is sometimes possible to see "through" lower tabs. In this case it needs to appear like the background of an upper tab is visible.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.DrawTabControlButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Draws a button on a tab control.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The region occupied by the button.</param>
            <param name="buttonType">The type of button to draw.</param>
            <param name="state">The state of the button.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.DrawTabControlBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draws the background of a tab page.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds occupied by the tab.</param>
            <param name="backColor">The background colour of the tab.</param>
            <param name="client">Whether to draw the client area of a tab page (on the TabPage itself) or the border (on the parent TabControl).</param>
            <remarks>
            <para>This method is always called to draw the portion of the visible tab page that is actually on the parent TabControl, i.e. the border. If the ShouldDrawTabControlBackground property returns true,
            it is also used to directly draw the client area of the TabControl. To determine which scenario is happening, use the client parameter.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.DrawTabControlTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Draws a tab.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds occupied by the tab.</param>
            <param name="image">The image associated with the tab.</param>
            <param name="text">The text associated with the tab.</param>
            <param name="font">The font to draw text with.</param>
            <param name="backColor">The background colour of the tab.</param>
            <param name="foreColor">The foreground colour of the tab.</param>
            <param name="state">The state of the tab.</param>
            <param name="drawSeparator">Whether to draw a separator after the tab.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.MeasureTabControlTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Measures a tab in order to find the minimum required size.
            </summary>
            <param name="graphics">The Graphics object to measure with.</param>
            <param name="image">The image of the document tab.</param>
            <param name="text">The text of the document tab.</param>
            <param name="font">The font to render text with.</param>
            <param name="state">The state of the document tab.</param>
            <returns>The minimum size of the document tab.</returns>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.DrawTabControlTabStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws the background of a tabstrip on a TabControl.
            </summary>
            <param name="graphics">The Graphics object to draw width.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="backColor">The background colour specified for the TabControl.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            Prepares the renderer for a rendering session.
            </summary>
            <param name="tabHotKeys">How hotkeys should be handled when drawing text on tabs.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.ITabControlRenderer.FinishRenderSession">
            <summary>
            Releases resources used during a rendering session.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ITabControlRenderer.ShouldDrawTabControlBackground">
            <summary>
            Determines whether the renderer should draw on to the client area of a tab page.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ITabControlRenderer.TabControlTabExtra">
            <summary>
            Gets the amount of extra space around a tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ITabControlRenderer.TabControlTabStripHeight">
            <summary>
            Gets the height of a normal, single line tabstrip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ITabControlRenderer.TabControlTabHeight">
            <summary>
            Gets the height of a tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ITabControlRenderer.TabControlPadding">
            <summary>
            Gets the amount of padding to use around TabPages.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ITabControlRenderer.ShouldDrawControlBorder">
            <summary>
            Indicates whether the TabControl should draw its own border when used with this renderer.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.#ctor">
            <summary>
            Initializes a new instance of the RendererBase class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.Dispose">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.OnMetricsChanged(System.EventArgs)">
            <summary>
            Raises the MetricsChanged event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.ModifyDefaultWindowColors(TD.SandDock.DockControl,System.Drawing.Color@,System.Drawing.Color@)">
            <summary>
            Gives the renderer a chance to alter the default colors of a window before it is drawn.
            </summary>
            <param name="window">The window in question.</param>
            <param name="backColor">The background color of the window.</param>
            <param name="borderColor">The border color of the window.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.InterpolateColors(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Mixes two colours together to form a new colour.
            </summary>
            <param name="color1">The first source colour.</param>
            <param name="color2">The second source colour.</param>
            <param name="percentage">A value that lies between 0 and 1, 0 being the first colour and 1 being the second.</param>
            <returns>The new colour produced after mixing.</returns>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.GetColorsFromSystem">
            <summary>
            Calculates the base colours used by the renderer, based on the current Windows colour scheme or visual style.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.AdjustDockControlClientBounds(TD.SandDock.ControlLayoutSystem,TD.SandDock.DockControl,System.Drawing.Rectangle)">
            <summary>
            Requests that the renderer perform any adjustments to the client rectangle of a DockControl before it is applied.
            </summary>
            <param name="layoutSystem">The layout system to which the control belongs.</param>
            <param name="control">The control that will be laid out in the calculated area.</param>
            <param name="clientBounds">The suggested client rectangle for the control.</param>
            <returns>The adjusted bounds of the control.</returns>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.MeasureDocumentStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Measures a document strip tab in order to find the minimum required size.
            </summary>
            <param name="graphics">The Graphics object to measure with.</param>
            <param name="image">The image of the document tab.</param>
            <param name="text">The text of the document tab.</param>
            <param name="font">The font to render text with.</param>
            <param name="state">The state of the document tab.</param>
            <returns>The minimum size of the document tab.</returns>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.MeasureTabStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Measures a tabstrip tab in order to find the minimum required size.
            </summary>
            <param name="graphics">The Graphics object to measure with.</param>
            <param name="image">The image of the document tab.</param>
            <param name="text">The text of the document tab.</param>
            <param name="font">The font to render text with.</param>
            <param name="state">The state of the document tab.</param>
            <returns>The minimum size of the document tab.</returns>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawDocumentStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background of a document strip.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawControlClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws the background of the client area of a control.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="backColor">The background colour of the selected control.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawDocumentClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws the background of the client area of a document.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="backColor">The background colour of the selected document.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawDocumentStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Draws a tab in a document strip.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds occupied by the tab.</param>
            <param name="contentBounds">The bounds around the content of the tab (without any buttons).</param>
            <param name="image">The image associated with the tab.</param>
            <param name="text">The text associated with the tab.</param>
            <param name="font">The font to draw text with.</param>
            <param name="backColor">The background colour of the tab.</param>
            <param name="foreColor">The foreground colour of the tab.</param>
            <param name="state">The state of the tab.</param>
            <param name="drawSeparator">Whether to draw a separator after the tab.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawDockContainerBackground(System.Drawing.Graphics,TD.SandDock.DockContainer,System.Drawing.Rectangle)">
            <summary>
            Draws the background of a <see cref="T:TD.SandDock.DockContainer"/>.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="container">The DockContainer whose background will be drawn.</param>
            <param name="bounds">The bounds occupied by the control.</param>
            <remarks>
            <para>Implementors should ensure that all the region given is painted within this method. It is safe to use the Graphics.Clear method.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawDocumentStripButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Draws a button on a document strip.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The region occupied by the button.</param>
            <param name="buttonType">The type of button to draw.</param>
            <param name="state">The state of the button.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            Initializes any drawing objects used during the render process.
            </summary>
            <param name="hotKeys">Determines how the renderer should handle keyboard mnemonics in text.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTabStripBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the background of a tabstrip within a control layout system.
            </summary>
            <param name="container">The container control that contains the control to draw on. This parameter can be a null reference.</param>
            <param name="control">The control whose surface will be drawn on.</param>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="selectedTabOffset">The offset, in pixels, of the selected tab within this tabstrip along the x axis.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawSplitter(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Orientation)">
            <summary>
            Draws a splitter.
            </summary>
            <param name="container">The container control that contains the control to draw on. This parameter can be a null reference.</param>
            <param name="control">The control whose surface will be drawn on.</param>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The region occupied by the splitter.</param>
            <param name="orientation">The orientation of the splitter.</param>
            <remarks>
            <para>Since the background of the DockContainer will already have been drawn, this method can safely do nothing.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTabStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Draws a tab in a tabstrip within a control layout system.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="image">The image associated with this tab.</param>
            <param name="text">The text associated with this tab.</param>
            <param name="font">The font to draw the text with.</param>
            <param name="backColor">The background colour of the tab.</param>
            <param name="foreColor">The foreground colour of the tab.</param>
            <param name="state">The state of the tab. This is equal to DrawItemState.Default by default.</param>
            <param name="drawSeparator">Whether to draw a separator at the right of this tab.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawAutoHideBarBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background of the area occupied by collapsed control layout systems.
            </summary>
            <param name="container">The container control that contains the control to draw on.</param>
            <param name="control">The control whose surface will be drawn on.</param>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawCollapsedTab(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.DockSide,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Draws a tab within the area occupied by collapsed control layout systems.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="dockSide">The orientation of this tab. This will never be DockSide.None.</param>
            <param name="image">The image associated with this tab.</param>
            <param name="text">The text associated with this tab. This will be a zero-length string unless the tab is selected.</param>
            <param name="font">The font to draw the text with.</param>
            <param name="backColor">The background colour of the tab.</param>
            <param name="foreColor">The foreground colour of the tab.</param>
            <param name="state">The state of the tab. This is equal to DrawItemState.Default by default.</param>
            <param name="vertical">Whether this tab is drawn vertically.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTitleBarBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the background of a titlebar within a control layout system.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="focused">Whether the titlebar is drawn in an active state.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTitleBarText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.String,System.Drawing.Font)">
            <summary>
            Draws the text in the titlebar within a control layout system.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="focused">Whether the titlebar is drawn in an active state.</param>
            <param name="text">The text associated with this titlebar.</param>
            <param name="font">The font to draw the text with.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTitleBarButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState,System.Boolean,System.Boolean)">
            <summary>
            Draws a button in the titlebar within a control layout system.
            </summary>
            <param name="graphics">The Graphics object to draw with.</param>
            <param name="bounds">The bounds to draw within.</param>
            <param name="buttonType">The type of button to draw.</param>
            <param name="state">The state of the button. This is equal to DrawItemState.Default by default.</param>
            <param name="focused">Whether the titlebar is drawn in an active state.</param>
            <param name="toggled">Whether the button is toggled.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.FinishRenderSession">
            <summary>
            Cleans up any drawing objects used during the render process.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawFakeTabControlBackgroundExtension(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTabControlButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTabControlBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.MeasureTabControlTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTabControlTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.RendererBase.DrawTabControlTabStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="E:TD.SandDock.Rendering.RendererBase.MetricsChanged">
            <summary>
            Raised when measurement metrics have changed.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.CustomColors">
            <summary>
            Indicates whether custom colours have been configured on this renderer.
            </summary>
            <remarks>
            <para>To go back to system default colours, set this property to false.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabStripMetrics">
            <summary>
            Gets the metrics of a tabstrip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabMetrics">
            <summary>
            Gets the metrics of a tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TitleBarMetrics">
            <summary>
            Gets the metrics of a title bar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.ImageSize">
            <summary>
            Gets the size of images used inside tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabTextDisplay">
            <summary>
            Determines what type of text to display on collapsed tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.DocumentTabExtra">
            <summary>
            Gets the extra padding to insert before a document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.DocumentTabSize">
            <summary>
            Gets the height of a document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.DocumentTabStripSize">
            <summary>
            Gets the height of a document tab strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.ShouldDrawControlBorder">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.ShouldDrawTabControlBackground">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabControlPadding">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabControlTabExtra">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabControlTabStripHeight">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.RendererBase.TabControlTabHeight">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.ApplyStandardColors">
            <summary>
            Applies colors obtained from the normal system colors. This method should check for SystemInformation.HighContrast.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.ApplyLunaBlueColors">
            <summary>
            Applies colors appropriate for the Windows XP Luna Blue color scheme.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.ApplyLunaOliveColors">
            <summary>
            Applies colors appropriate for the Windows XP Luna Olive color scheme.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.ApplyLunaSilverColors">
            <summary>
            Applies colors appropriate for the Windows XP Luna Silver color scheme.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.FinishRenderSession">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.DrawAutoHideBarBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden. Draws the background of an AutoHide bar, adhering to the gradient being drawn across the whole layout.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.DrawSplitter(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Orientation)">
            <summary>
            Overridden. Draws a splitter that adheres to the gradient being drawn across the whole layout.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.DrawTabStripBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Overridden. Draws the background of a tabstrip, adhering to the gradient being drawn across the whole layout.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.ThemeAwareRendererBase.GetColorsFromSystem">
            <summary>
            Overridden. Calls one of the Apply methods depending on the current Windows color scheme.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ThemeAwareRendererBase.TextFormat">
            <summary>
            A standard TextFormatFlags value that can be used during measuring and rendering.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ThemeAwareRendererBase.LayoutBackgroundColor1">
            <summary>
            The colour used to draw the start of the gradient in the background of a DockContainer.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ThemeAwareRendererBase.LayoutBackgroundColor2">
            <summary>
            The colour used to draw the end of the gradient in the background of a DockContainer.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.ThemeAwareRendererBase.ColorScheme">
            <summary>
            The color scheme used to render graphical elements.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.#ctor">
            <summary>
            Initializes a new instance of the Office2003Renderer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.#ctor(TD.SandDock.Rendering.WindowsColorScheme)">
            <summary>
            Initializes a new instance of the Office2003Renderer class.
            </summary>
            <param name="colorScheme">The initial value of the ColorScheme property.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.ApplyStandardColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.ApplyLunaBlueColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.ApplyLunaOliveColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.ApplyLunaSilverColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawTitleBarButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState,System.Boolean,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawTitleBarText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.String,System.Drawing.Font)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawTitleBarBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawCollapsedTab(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.DockSide,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawTabStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawControlClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawDocumentClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.MeasureTabStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.MeasureDocumentStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawDockContainerBackground(System.Drawing.Graphics,TD.SandDock.DockContainer,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.AdjustDockControlClientBounds(TD.SandDock.ControlLayoutSystem,TD.SandDock.DockControl,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawDocumentStripButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawDocumentStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.DrawDocumentStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2003Renderer.ToString">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.HighlightBorderColor">
            <summary>
            The colour used to draw the border of button highlights.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.HighlightBackgroundColor1">
            <summary>
            The colour used to draw the top of the gradient on the background of a button highlight.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.HighlightBackgroundColor2">
            <summary>
            The colour used to draw the bottom of the gradient on the background of a button highlight.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.InactiveTitleBarColor1">
            <summary>
            The colour used to draw the top of the gradient on the background of an inactive titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.InactiveTitleBarColor2">
            <summary>
            The colour used to draw the bottom of the gradient on the background of an inactive titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.ActiveTitleBarColor1">
            <summary>
            The colour used to draw the top of the gradient on the background of an active titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.ActiveTitleBarColor2">
            <summary>
            The colour used to draw the bottom of the gradient on the background of an active titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.GripperColor">
            <summary>
            The colour used to draw the squares that represent the "gripper" on a titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.DocumentStripBackgroundColor1">
            <summary>
            The colour used to draw the top of the gradient on the background of a document strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.DocumentStripBackgroundColor2">
            <summary>
            The colour used to draw the top of the gradient on the background of a document strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.ActiveDocumentBorderColor">
            <summary>
            The colour used to draw the border around an active document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.InactiveDocumentBorderColor">
            <summary>
            The colour used to draw the border around an inactive document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.ActiveDocumentHighlightColor">
            <summary>
            The colour used to draw the highlight on an active document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.InactiveDocumentHighlightColor">
            <summary>
            The colour used to draw the highlight on an inactive document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.ActiveDocumentShadowColor">
            <summary>
            The colour used to draw the shadow on an active document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.InactiveDocumentShadowColor">
            <summary>
            The colour used to draw the shadow on an inactive document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.WidgetColor">
            <summary>
            The colour used to draw the scroll left, scroll right and close buttons on a document strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.TitleBarMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.TabTextDisplay">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.TabMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.TabStripMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.DocumentTabStripSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.TabControlPadding">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.DocumentTabSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2003Renderer.DocumentTabExtra">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockingHints">
            <summary>
            A style of artifact drawing used to show docking and resizing status.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockingHints.RubberBand">
            <summary>
            A reversible "rubber band" rectangle is drawn. This is made up of small dots that XOR the pixel beneath them.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockingHints.TranslucentFill">
            <summary>
            A translucent area is drawn. This effect is only available on Windows 2000 and later operating systems.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.Office2007Renderer">
            <summary>
            Provides rendering facilities to mimic the appearance of Office 2007.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.#ctor(TD.SandDock.Rendering.Office2007ColorScheme)">
            <summary>
            Initializes a new instance of the Office2007Renderer class.
            </summary>
            <param name="colorScheme">The initial value of the ColorScheme property.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.#ctor">
            <summary>
            Initializes a new instance of the Office2007Renderer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.ToString">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.FinishRenderSession">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawControlClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawAutoHideBarBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawDockContainerBackground(System.Drawing.Graphics,TD.SandDock.DockContainer,System.Drawing.Rectangle)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawSplitter(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Orientation)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawTitleBarBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawTitleBarText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.String,System.Drawing.Font)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawTabStripBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawTabStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawTitleBarButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState,System.Boolean,System.Boolean)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawCollapsedTab(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.DockSide,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawDocumentStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawDocumentStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.MeasureTabStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.MeasureDocumentStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawDocumentStripButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawDocumentClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.AdjustDockControlClientBounds(TD.SandDock.ControlLayoutSystem,TD.SandDock.DockControl,System.Drawing.Rectangle)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.DrawTabControlBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.Office2007Renderer.ModifyDefaultWindowColors(TD.SandDock.DockControl,System.Drawing.Color@,System.Drawing.Color@)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentSelectedTabBackground">
            <summary>
            The color blend with which to draw the background of a selected document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentHotTabBackground">
            <summary>
            The color blend with which to draw the background of a hot document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentNormalTabBackground">
            <summary>
            The color blend with which to draw the background of a normal document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentHotTabInnerBorder">
            <summary>
            The color with which to draw the inner border of a hot document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentSelectedTabOuterBorder">
            <summary>
            The color with which to draw the outer border of a selected document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentSelectedTabInnerBorder">
            <summary>
            The color with which to draw the inner border of a selected document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentHotTabOuterBorder">
            <summary>
            The color with which to draw the outer border of a hot document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentNormalTabInnerBorder">
            <summary>
            The color with which to draw the inner border of a normal document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentNormalTabOuterBorder">
            <summary>
            The color with which to draw the outer border of a normal document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentStripBorder">
            <summary>
            The color with which to draw the border of a document strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentContainerBackground">
            <summary>
            The color blend with which to draw the background of a document container.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.CollapsedTabVerticalBackground">
            <summary>
            The color blend with which to draw the background of a vertical collapsed tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.CollapsedTabHorizontalBackground">
            <summary>
            The color blend with which to draw the background of a horizontal collapsed tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.CollapsedTabBorder">
            <summary>
            The color with which to draw the border of a collapsed tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ButtonHotBackground">
            <summary>
            The color blend with which to draw the background of a hot button.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ButtonHotInnerBorder">
            <summary>
            The color blend with which to draw the inner border on a hot button.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ButtonHotOuterBorder">
            <summary>
            The color blend with which to draw the outer border on a hot button.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ButtonPressedBackground">
            <summary>
            The color blend with which to draw the background of a pressed button.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ButtonPressedInnerBorder">
            <summary>
            The color blend with which to draw the inner border on a pressed button.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ButtonPressedOuterBorder">
            <summary>
            The color blend with which to draw the outer border on a pressed button.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabStripSelectedTabBorder">
            <summary>
            The color blend with which to draw the border on a selected tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabStripSelectedTabBackground">
            <summary>
            The color blend with which to draw the background of a selected tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.InactiveTitleBarBackground">
            <summary>
            The color blend with which to draw the background of an inactive titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ActiveTitleBarBackground">
            <summary>
            The color blend with which to draw the background of an active titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabStripNormalTabForeground">
            <summary>
            The color with which to draw the foreground of a normal tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabStripInnerBorder">
            <summary>
            The color with which to draw the inner border of a tabstrip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabStripOuterBorder">
            <summary>
            The color with which to draw the outer border of a tabstrip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.Background">
            <summary>
            The color with which to draw the background.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DockedWindowOuterBorder">
            <summary>
            The color with which to draw the outer border of a docked window.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DockedWindowInnerBorder">
            <summary>
            The color with which to draw the inner border of a docked window.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ImageSize">
            <summary>
            The size of image to draw in window tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ColorScheme">
            <summary>
            The color scheme in use by the renderer.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TextFormat">
            <summary>
            A standard TextFormatFlags value that can be used during measuring and rendering.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabMetrics">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabStripMetrics">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabTextDisplay">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TitleBarMetrics">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentTabStripSize">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentTabSize">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.DocumentTabExtra">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.TabControlPadding">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.Office2007Renderer.ShouldDrawControlBorder">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.MilborneRenderer">
            <summary>
            A renderer that gives a sleek silvery look to tab controls.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.#ctor">
            <summary>
            Initializes a new instance of the MilborneRenderer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.ToString">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.DrawFakeTabControlBackgroundExtension(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.DrawTabControlButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.MeasureTabControlTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.FinishRenderSession">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.DrawTabControlTabStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.DrawTabControlTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.MilborneRenderer.DrawTabControlBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.PageColorBlend">
            <summary>
            Indicates how much of the BackColor of each TabPage will show through on its background.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.TabColorBlend">
            <summary>
            Indicates how much of the BackColor of each TabPage will show through on their tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.ShouldDrawControlBorder">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.TabControlTabStripHeight">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.TabControlTabExtra">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.TabControlPadding">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.TabControlTabHeight">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.MilborneRenderer.ShouldDrawTabControlBackground">
            <summary>
            See the ITabControlRenderer interface documentation for description.
            </summary>
        </member>
        <member name="T:TD.SandDock.TabPage">
            <summary>
            A single tab suitable for adding to a TabControl.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabPage.#ctor">
            <summary>
            Initializes a new instance of the TabPage class.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabPage.Dispose(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TabPage class, with the specified text.
            </summary>
            <param name="text">The text for the tab of the new TabPage.</param>
        </member>
        <member name="M:TD.SandDock.TabPage.OnCreateControl">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabPage.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.TabPage.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabPage.CreateHandle">
            <summary>
            Overridden. Ensures that as the handle is created the index within the parent control does not change.
            </summary>
        </member>
        <member name="E:TD.SandDock.TabPage.Load">
            <summary>
            Raised just before the control becomes visible for the first time.
            </summary>
            <remarks>
            <para>This event facilitates deferred loading of complex controls by making it possible to keep your DockControl empty until it first becomes the selected
            control in its parent layout system. You can then load its child controls only when needed, speeding up initial application load.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.TabPage.BackColor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.Dock">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.Anchor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.Enabled">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.TabIndex">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.TabStop">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.Visible">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.MaximumTabWidth">
            <summary>
            Indicates the maximum width of the tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.Text">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.TabImage">
            <summary>
            The image displayed next to the text on the tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.TabBounds">
            <summary>
            Indicates the area occupied by the tab of the TabPage.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.Guid">
            <summary>
            This property is obsolete and provided for backward compatibility reasons only.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.FloatingSize">
            <summary>
            This property is obsolete and provided for backward compatibility reasons only.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabPage.TabText">
            <summary>
            This property is obsolete and provided for backward compatibility reasons only.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockControl">
            <summary>
            A control to be used in a docking layout.
            </summary>
            <remarks>
            <para>DockControl instances are grouped together in ControlLayoutSystems. They can act as containers to other controls.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DockControl.#ctor">
            <summary>
            Initializes a new instance of the DockControl class.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.#ctor(TD.SandDock.SandDockManager,System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the DockControl class, containing the specified control and with the specified text.
            </summary>
            <param name="manager">The SandDockManager responsible for layout of the control.</param>
            <param name="control">The control to host within the DockControl.</param>
            <param name="text">The text of the DockControl.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.CreateDockingRules">
            <summary>
            Creates the default set of docking rules for the window.
            </summary>
            <returns>An instance of the DockingRules class.</returns>
        </member>
        <member name="M:TD.SandDock.DockControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OnEnter(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnLeave(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.SetPositionMetaData(TD.SandDock.DockSituation)">
            <summary>
            Used to set metadata ready for the next time the window is opened.
            </summary>
            <param name="dockSituation">The dock situation the window will adopt next time it is opened.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.SetPositionMetaData(TD.SandDock.DockSituation,TD.SandDock.ContainerDockLocation)">
            <summary>
            Used to set metadata ready for the next time the window is opened.
            </summary>
            <param name="dockSituation">The dock situation the window will adopt next time it is opened.</param>
            <param name="dockLocation">The side of the container at which the window will sit next time it is docked.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenFloating">
            <summary>
            Opens the window in a floating state.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenFloating(System.Drawing.Rectangle,TD.SandDock.WindowOpenMethod)">
            <summary>
            Opens the window in a floating state, forcing a new floating window to be created.
            </summary>
            <param name="bounds">The screen boundaries at which to place the new floating window.</param>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenFloating(TD.SandDock.WindowOpenMethod)">
            <summary>
            Opens the window in a floating state, at the specified bounds.
            </summary>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.GetDefaultFloatingLocation">
            <summary>
            Calculates the default floating location for the window.
            </summary>
            <remarks>
            <para>When a window does not have a record of any previous floating coordinates, this method is called to get the default location. Once a window has been floated once, its
            floating position is saved along with the serialized window layout and the method will not be called again.</para>
            </remarks>
            <returns>A location in screen coordinates.</returns>
        </member>
        <member name="M:TD.SandDock.DockControl.GetFloatingForm">
            <summary>
            Obtains a reference to the top-level Form object hosting the window while it is floating.
            </summary>
            <returns>An instance of the Form class.</returns>
        </member>
        <member name="M:TD.SandDock.DockControl.Open">
            <summary>
            Opens the window at its last known position.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.Open(TD.SandDock.WindowOpenMethod)">
            <summary>
            Opens the window at its last known location.
            </summary>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.Remove">
            <summary>
            Removes the window from the layout.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenDocked">
            <summary>
            Opens the DockControl at its last known docked location.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenDocked(TD.SandDock.ContainerDockLocation)">
            <summary>
            Opens the window at the specified docked location.
            </summary>
            <param name="dockLocation">The location at which to open the window.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenDocked(TD.SandDock.ContainerDockLocation,TD.SandDock.WindowOpenMethod)">
            <summary>
            Opens the window docked on the specified side of the container.
            </summary>
            <param name="dockLocation">The side of the container at which to dock the window.</param>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenDocument(TD.SandDock.WindowOpenMethod)">
            <summary>
            Opens the window as a tabbed document.
            </summary>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenDocked(TD.SandDock.WindowOpenMethod)">
            <summary>
            Opens the window at the specified docked location.
            </summary>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.Split(TD.SandDock.DockSide)">
            <summary>
            Causes the window to split itself off from other windows in its tab group.
            </summary>
            <param name="direction">The side of the previous tab group at which to place the window.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.Close">
            <summary>
            Hides the DockControl, whatever its status.
            </summary>
            <remarks>
            <para>This method removes the DockControl from its current container and optionally disposes it, depending on the CloseAction property.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DockControl.OnClosing(TD.SandDock.DockControlClosingEventArgs)">
            <summary>
            Raises the Closing event.
            </summary>
            <param name="e">The arguments for the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnClosed(System.EventArgs)">
            <summary>
            Raises the Closed event.
            </summary>
            <param name="e">The arguments for the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnDockSituationChanged(System.EventArgs)">
            <summary>
            Raises the DockSituationChanged event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnTabDoubleClick">
            <summary>
            Called when the user double clicks on the Tab for the window.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.Activate">
            <summary>
            Shows the control and sets focus to it.
            </summary>
            <remarks>
            <para>This method ensures the control is the selected one within the parent layout system and then sets focus to it.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DockControl.DockNextTo(TD.SandDock.DockControl)">
            <summary>
            Docks the DockControl next to an existing dockable window.
            </summary>
            <param name="existingWindow">The dockable window to place the DockControl next to.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenWith(TD.SandDock.DockControl)">
            <summary>
            Docks the window grouped with an existing window.
            </summary>
            <param name="existingWindow">The dockable window to place the DockControl next to.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OpenBeside(TD.SandDock.DockControl,TD.SandDock.DockSide)">
            <summary>
            Opens the window next to an existing window.
            </summary>
            <param name="existingWindow">The existing window next to which to open the window.</param>
            <param name="side">The side of the existing window at which to place the new window.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.DockInNewContainer(TD.SandDock.ContainerDockLocation,TD.SandDock.ContainerDockEdge)">
            <summary>
            Docks the DockControl in a new DockContainer.
            </summary>
            <param name="dockLocation">The location in the form at which to place the new container.</param>
            <param name="edge">Whether to place the new container on the inside or outside of existing controls.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnCreateControl">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.OnAutoHidePopupClosed(System.EventArgs)">
            <summary>
            Raises the AutoHidePopupClosed event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnAutoHidePopupOpened(System.EventArgs)">
            <summary>
            Raises the AutoHidePopupOpened event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.DockControl.OnFontChanged(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.Dispose(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="E:TD.SandDock.DockControl.Closing">
            <summary>
            Raised when the dockable window is about to be closed.
            </summary>
            <remarks>
            This event is always raised in response to either the user closing the control, or programmatically using the Close method. Its event arguments
            provide a means to cancel the close.
            </remarks>
        </member>
        <member name="E:TD.SandDock.DockControl.Closed">
            <summary>
            Raised when the dockable window has just been closed.
            </summary>
        </member>
        <member name="E:TD.SandDock.DockControl.Load">
            <summary>
            Raised just before the control becomes visible for the first time.
            </summary>
            <remarks>
            <para>This event facilitates deferred loading of complex controls by making it possible to keep your DockControl empty until it first becomes the selected
            control in its parent layout system. You can then load its child controls only when needed, speeding up initial application load.</para>
            </remarks>
        </member>
        <member name="E:TD.SandDock.DockControl.AutoHidePopupOpened">
            <summary>
            Raised when the popup window has been opened to show the DockControl when it is collapsed.
            </summary>
        </member>
        <member name="E:TD.SandDock.DockControl.AutoHidePopupClosed">
            <summary>
            Raised when the popup window showing the collapsed DockControl has been closed.
            </summary>
        </member>
        <member name="E:TD.SandDock.DockControl.DockSituationChanged">
            <summary>
            Raised when the control changes from one dock state to another.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowKeyboardNavigation">
            <summary>
            Indicates whether keyboard navigation will be allowed from this control.
            </summary>
            <remarks>
            <para>The default implementation of this property obtains the value from the associated SandDockManager.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.BindingContext">
            <summary>
            Overridden. This property always returns the BindingContext of the container hosting the SandDock layout.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.PrimaryControl">
            <summary>
            The control that will be focused when the window is activated.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.Collapsed">
            <summary>
            Indicates whether the window is collapsed when docked.
            </summary>
            <remarks>
            <para>This setting is automatically applied to all sibling windows in the same group.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.CloseAction">
            <summary>
            Indicates what action will be performed when the DockControl is closed.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.MetaData">
            <summary>
            Meta data about the window and its position.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.Dock">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.DisplayRectangle">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.PersistState">
            <summary>
            Indicates whether the location of the DockControl will be included in layout serialization.
            </summary>
            <remarks>
            <para>Use this property when you are using temporary or incidental dockable windows at runtime that you do not wish to be included in layout
            information persisted via a call to GetLayout.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.BorderStyle">
            <summary>
            The type of border to be drawn around the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.LayoutSystem">
            <summary>
            The ControlLayoutSystem the DockControl belongs to.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.Manager">
            <summary>
            The SandDockManager instance associated with the DockControl.
            </summary>
            <remarks>
            <para>If any form of docking will be used, it is essential that all DockControls know about the SandDockManager object responsible for
            managing the docked layout. This property is automatically assigned to when a DockControl is first added to a DockContainer that knows
            about the manager.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.Guid">
            <summary>
            The unique identifier for the window.
            </summary>
            <remarks>
            <para>Dockable windows need unique identifiers for layout serialization purposes. If any windows have the same identifier serialization will not
            work correctly. The identifier can also be used to find windows.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.IsDocked">
            <summary>
            Indicates whether the DockControl is docked to a side of the container.
            </summary>
            <remarks>
            <para>This method will also return true if a window has been docked in the center of the container, but only if tabbed documents have been disabled. The method will return false if
            the window is floating.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.IsTabbedDocument">
            <summary>
            Indicates whether the DockControl is being displayed in the centre of the container as a tabbed document.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.IsFloating">
            <summary>
            Indicates whether the DockControl is in a floating container.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.IsInContainer">
            <summary>
            Indicates whether the DockControl is in a dock container.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.IsOpen">
            <summary>
            Indicates whether the DockControl is visible at any location on the screen.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.BackColor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.ForeColor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.FloatingSize">
            <summary>
            Indicates the default size this control will assume when floating on its own.
            </summary>
            <remarks>
            If the control is a part of a group of controls, the size of the group will be used instead of the control.
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.FloatingLocation">
            <summary>
            Indicates the location of the floating window that will contain this control.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowFloat">
            <summary>
            Indicates whether the user will be able to float the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowDockCenter">
            <summary>
            Indicates whether the user will be able to dock the window in the center of the container.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowDockLeft">
            <summary>
            Indicates whether the user will be able to dock the control to the left-hand side of the form.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowDockRight">
            <summary>
            Indicates whether the user will be able to dock the control to the right-hand side of the form.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowDockTop">
            <summary>
            Indicates whether the user will be able to dock the control to the top side of the form.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowDockBottom">
            <summary>
            Indicates whether the user will be able to dock the control to the bottom side of the form.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.DockingRules">
            <summary>
            The rules with which to govern where the user can move the window.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowKeyboardFocus">
            <summary>
            Determines whether the user will be able to press tab to bring the focus within the window when docked.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.Closable">
            <summary>
            Indicates whether this control will be closable by the user.
            </summary>
            <remarks>
            When this property is set to true, a close button will be displayed in the titlebar of the layout system containing this control when the control is selected.
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowClose">
            <summary>
            Indicates whether this control will be closable by the user.
            </summary>
            <remarks>
            When this property is set to true, a close button will be displayed in the titlebar of the layout system containing this control when the control is selected.
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.MaximumTabWidth">
            <summary>
            Indicates the maximum width of the tab representing the window.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.MinimumTabWidth">
            <summary>
            Indicates the minimum width of the tab representing the window.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.ShowOptions">
            <summary>
            Indicates whether an options button will be displayed in the titlebar for this window.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.AllowCollapse">
            <summary>
            Indicates whether the user will be able to put this control in to auto-hide mode.
            </summary>
            <remarks>
            <para>If all DockControls in a control layout system have this property set to true, a pushpin button will be displayed in the titlebar of the layout system
            containing this control when the control is selected.</para>
            <para>Control layout systems are "pinned" by default. Pressing the pushpin button will "unpin" the layout system and it will collapse in to a thin bar
            alongside the edge of the containing DockContainer. It can be retrieved by clicking on or hovering over the buttons in this bar.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.ToolTipText">
            <summary>
            Gets or sets the text that appears as a ToolTip for the control tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.TabText">
            <summary>
            The text to display on the tab for the DockControl. This can be different to the standard text, shown in titlebars.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.PopupSize">
            <summary>
            The size of the control when popped up from a collapsed state. Leave this as zero for the default size.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.Text">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.TabBounds">
            <summary>
            The bounds of the tab that represents the DockControl within its parent layout system.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.DockSituation">
            <summary>
            The situation in which the window is currently docked.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControl.TabImage">
            <summary>
            The image displayed for this control on docking tabs.
            </summary>
            <remarks>
            If this parameter is set to a null reference, the default tab image (the SandDock logo) is used. For this reason, this parameter should ideally always
            be set.
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockControl.DefaultSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:TD.SandDock.WindowMetaData">
            <summary>
            Provides memory for a dockable window and its situation.
            </summary>
        </member>
        <member name="P:TD.SandDock.WindowMetaData.LastFocused">
            <summary>
            The time that the window last received keyboard focus.
            </summary>
        </member>
        <member name="P:TD.SandDock.WindowMetaData.LastFixedDockSide">
            <summary>
            The location at which the window was last docked.
            </summary>
        </member>
        <member name="P:TD.SandDock.WindowMetaData.DockedContentSize">
            <summary>
            The content size a container should adopt to host the window.
            </summary>
        </member>
        <member name="P:TD.SandDock.WindowMetaData.LastOpenDockSituation">
            <summary>
            The dock situation of the window when it was last open.
            </summary>
        </member>
        <member name="P:TD.SandDock.WindowMetaData.LastFixedDockSituation">
            <summary>
            The dock situation of the window when it was last open in a non-floating state.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockContainer">
            <summary>
            The top level object in a SandDock layout system.
            </summary>
            <remarks>
            <para>There are typically four of these in a standard layout system to begin with, with more create at runtime when floating containers are needed. More
            DockContainers can be registered using the methods on SandDockManager. Once a DockContainer has been registered it is available as a target in
            docking operations.</para>
            <para>DockContainers are responsible for managing DockControls that have been "unpinned". This layout logic is only available when the DockContainer's
            Dock property is set to Top, Bottom, Left or Right.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DockContainer.#ctor">
            <summary>
            Initializes a new instance of the DockContainer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnParentChanged(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.Dispose(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.CreateNewLayoutSystem(System.Drawing.SizeF)">
            <summary>
            Creates a new layout system suitable for use in the DockContainer.
            </summary>
            <returns>A new layout system.</returns>
            <param name="size">The size of the new layout system.</param>
        </member>
        <member name="M:TD.SandDock.DockContainer.CreateNewLayoutSystem(TD.SandDock.DockControl,System.Drawing.SizeF)">
            <summary>
            Creates a new layout system suitable for use in the DockContainer, containing the specified DockControl.
            </summary>
            <param name="control">The DockControl to initially include in the layout system.</param>
            <param name="size">The size of the new layout system.</param>
            <returns>A new layout system</returns>
        </member>
        <member name="M:TD.SandDock.DockContainer.CreateNewLayoutSystem(TD.SandDock.DockControl[],System.Drawing.SizeF)">
            <summary>
            Creates a new layout system suitable for use in the DockContainer, containing the specified DockControls.
            </summary>
            <param name="controls">The DockControls to initially include in the layout system.</param>
            <param name="size">The size of the new layout system.</param>
            <returns>A new layout system</returns>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnFontChanged(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.GetWindowAt(System.Drawing.Point)">
            <summary>
            Retrieves the window whose tab is at the specified location.
            </summary>
            <param name="position">The location, in client coordinates, to search.</param>
            <returns>The window found.</returns>
        </member>
        <member name="M:TD.SandDock.DockContainer.GetLayoutSystemAt(System.Drawing.Point)">
            <summary>
            Retrieves the layout system at the specified location.
            </summary>
            <param name="position">The location, in client coordinates, to search.</param>
            <returns>The layout system found. If no layout system was found, a null reference is returned.</returns>
        </member>
        <member name="M:TD.SandDock.DockContainer.ContainsNoControlLayoutSystems">
            <summary>
            Used to check whether this can be removed after stuff is removed from it
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnHandleCreated(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.CalculateAllMetricsAndLayout">
            <summary>
            Calculates the layout of the layout system hierarchy and triggers a redraw.
            </summary>
            <remarks>
            <para>This is an advanced method that should be used after calling SetWorkingSize on layout systems.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnResize(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnMouseLeave(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnDoubleClick(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnDockingStarted(System.EventArgs)">
            <summary>
            Raises the DockingStarted event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:TD.SandDock.DockContainer.OnDockingFinished(System.EventArgs)">
            <summary>
            Raises the DockingFinished event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="E:TD.SandDock.DockContainer.DockingStarted">
            <summary>
            Raised when the user starts dragging a control or layout system.
            </summary>
            <remarks>
            This event can be used to present the user (via a statusbar or similar) with some helpful text describing how to manipulate controls in a redocking
            operation.
            </remarks>
        </member>
        <member name="E:TD.SandDock.DockContainer.DockingFinished">
            <summary>
            Raised when a docking or dragging operation has been completed.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.Dock">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.Text">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.BackgroundImage">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.BackColor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.ForeColor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.HasSingleControlLayoutSystem">
            <summary>
            Returns true if there is a single layout system occupying the DockContainer, and that layout system is a ControlLayoutSystem.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.ContentSize">
            <summary>
            The size of the content within the container.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.AllowResize">
            <summary>
            Indicates whether this container will allow the user to resize it.
            </summary>
            <remarks>
            The value of this property is obtained from the manager if available.
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockContainer.AllowDrop">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.Manager">
            <summary>
            The SandDockManager instance that is associated with this DockContainer.
            </summary>
            <remarks>
            DockContainers need to be associated with a SandDockManager to ensure correct behaviour and interaction with other DockContainers. This property
            should be set immediately after creating a DockContainer.
            </remarks>
        </member>
        <member name="P:TD.SandDock.DockContainer.DefaultSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.IsFloating">
            <summary>
            Indicates whether this container is floating.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockContainer.LayoutSystem">
            <summary>
            The root layout system within this container. This is always a split layout system.
            </summary>
        </member>
        <member name="T:TD.SandDock.ControlLayoutSystem">
            <summary>
            A layout system for grouping DockControls together.
            </summary>
            <remarks>
            <para>All DockControls must belong to a ControlLayoutSystem instance to be shown. These layout systems are responsible for grouping together
            one or more DockControls and drawing tabs to choose between them. They are also responsible for drawing titlebars and system buttoms.</para>
            </remarks>
        </member>
        <member name="T:TD.SandDock.LayoutSystemBase">
            <summary>
            The base class for SandDock layout systems.
            </summary>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs when an object is dragged over the layout system's bounds.
            </summary>
            <param name="drgevent">A DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse is moved within the bounds of this layout system.
            </summary>
            <param name="e">A MouseEventArgs representing the current state of the mouse cursor.</param>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.OnMouseLeave">
            <summary>
            Occurs when the mouse is moved out of the bounds of this layout system.
            </summary>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.OnMouseDoubleClick">
            <summary>
            Occurs when the primary mouse button is double clicked within the bounds of the layout system.
            </summary>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when a mouse button is pressed within the bounds of this layout system.
            </summary>
            <param name="e">A MouseEventArgs representing the current state of the mouse cursor.</param>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when a mouse button is released within the bounds of this layout system.
            </summary>
            <param name="e">A MouseEventArgs representing the current state of the mouse cursor.</param>
        </member>
        <member name="M:TD.SandDock.LayoutSystemBase.Layout(TD.SandDock.Rendering.RendererBase,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Instructs the layout system to lay out its children.
            </summary>
            <param name="renderer">The renderer currently in use in the container.</param>
            <param name="graphics">A Graphics object to perform measurement calculations with.</param>
            <param name="bounds">The boundaries of this layout system within the container.</param>
            <param name="floating">Indicates whether titlebars should be omitted. This is usually false.</param>
        </member>
        <member name="P:TD.SandDock.LayoutSystemBase.WorkingSize">
            <summary>
            Gets or sets the working size of this layout system.
            </summary>
            <remarks>
            <para>This is an advanced property for controlling the individual sizes of layout systems. Setting the property has no immediate effect - you should set the
            sizes of all layout systems required (taking account of splitter space between them) then call the CalculateAllMetricsAndLayout method on your DockContainer.</para>
            <para>When layout is calculated the working size is adjusted so that all layout systems are inflated or deflated to proportionally occupy all available
            space in the DockContainer. Therefore you can safely pass zero for the dimension that will be ignored - for example the width in layout systems within a
            horizontally-split layout system.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.LayoutSystemBase.DockContainer">
            <summary>
            The dock container at the top of the layout system hierarchy.
            </summary>
        </member>
        <member name="P:TD.SandDock.LayoutSystemBase.IsInContainer">
            <summary>
            Indicates whether the layout system is in a DockContainer.
            </summary>
        </member>
        <member name="P:TD.SandDock.LayoutSystemBase.Parent">
            <summary>
            The layout system above this one in the heirarchy.
            </summary>
        </member>
        <member name="P:TD.SandDock.LayoutSystemBase.Bounds">
            <summary>
            Retrieves the boundaries of this layout system within the container.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.#ctor">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class, with the specified initial dimensions.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.#ctor(System.Int32,System.Int32,TD.SandDock.DockControl[],TD.SandDock.DockControl)">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class, with the specified initial dimensions, and with the specified child controls.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
            <param name="controls">An array of DockControls to populate this layout system with.</param>
            <param name="selectedControl">The control to be made selected.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.#ctor(System.Drawing.SizeF,TD.SandDock.DockControl[],TD.SandDock.DockControl)">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class, with the specified working size, and with the specified child controls.
            </summary>
            <param name="workingSize">The working size of the layout system.</param>
            <param name="windows">An array of DockControls to populate this layout system with.</param>
            <param name="selectedWindow">The control to be made selected.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.#ctor(System.Int32,System.Int32,TD.SandDock.DockControl[],TD.SandDock.DockControl,System.Boolean)">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class, with the specified initial dimensions, and with the specified child controls.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
            <param name="controls">An array of DockControls to populate this layout system with.</param>
            <param name="selectedControl">The control to be made selected.</param>
            <param name="collapsed">Whether the layout system should start collapsed.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.ClosePopup">
            <summary>
            Closes the popup for this layout system, if it is showing.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnCloseButtonClick(System.EventArgs)">
            <summary>
            Called when the close button is clicked.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnPinButtonClick">
            <summary>
            Called when the pin button is clicked.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnMouseDoubleClick">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.OnMouseLeave">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.SplitForLayoutSystem(TD.SandDock.LayoutSystemBase,TD.SandDock.DockSide)">
            <summary>
            Splits this layout and moves another one in to the specified side.
            </summary>
            <remarks>
            <para>This method should be used to programmatically split an existing control layout system to receive another layout system. If the requested
            split would result in a split with a different orientation than the parent, this layout system is removed from the parent and replaced with a new
            split layout system to contain both layout systems.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.Float(TD.SandDock.SandDockManager,System.Drawing.Rectangle,TD.SandDock.WindowOpenMethod)">
            <summary>
            Moves the control layout system in to a new floating container.
            </summary>
            <param name="manager">The manager responsible for this layout.</param>
            <param name="bounds">The desktop bounds of the floating window, in pixels.</param>
            <param name="openMethod">The level to which the window is brought to the forefront.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.Float(TD.SandDock.SandDockManager)">
            <summary>
            Moves the unparented control layout system in to a new floating container.
            </summary>
            <param name="manager">The manager responsible for this layout.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.Dock(TD.SandDock.ControlLayoutSystem)">
            <summary>
            Moves this layout system in to an existing layout system.
            </summary>
            <param name="layoutSystem">The layout system to move in to.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.Dock(TD.SandDock.ControlLayoutSystem,System.Int32)">
            <summary>
            Moves this layout system in to an existing layout system, at the specified offset.
            </summary>
            <param name="layoutSystem">The layout system to move in to.</param>
            <param name="index">The offset of the new tabs in the existing layout system.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.GetControlAt(System.Drawing.Point)">
            <summary>
            Retrieves the dock control with a tab at the specified position.
            </summary>
            <param name="position">The location, in client coordinates, to search.</param>
            <returns>The dock control found. If no dock control was found, a null reference is returned.</returns>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.LayoutCollapsed(TD.SandDock.Rendering.RendererBase,System.Drawing.Rectangle)">
            <summary>
            Calculates the regions of the constituent parts of the control layout system when it is collapsed.
            </summary>
            <param name="renderer">The renderer from which object metrics can be calculated.</param>
            <param name="bounds">The region occupied by the layout system.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.CalculateLayout(TD.SandDock.Rendering.RendererBase,System.Drawing.Rectangle,System.Boolean,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            Calculates the regions of the constituent parts of the control layout system.
            </summary>
            <param name="renderer">The renderer to use to measure items.</param>
            <param name="bounds">The region occupied by the layout system.</param>
            <param name="floating">Whether the layout system is floating.</param>
            <param name="titlebarBounds">The region occupied by the titlebar.</param>
            <param name="tabstripBounds">The region occupied by the tabstrip.</param>
            <param name="clientBounds">The region occupied by the client area.</param>
            <param name="joinCatchmentBounds">The region that will accept other layout systems when they are dragged over it.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.Layout(TD.SandDock.Rendering.RendererBase,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.PopupSize">
            <summary>
            Used internally to get a helpful popupsize whatever the situation, and apply one to all child controls
            </summary>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.LockControls">
            <summary>
            Gets/sets a value indicating whether the user will be prevented from initiating docking operations from this layout system.
            </summary>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.IsPoppedUp">
            <summary>
            Indicates whether the layout system is popped up, if in a collapsed state.
            </summary>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.Controls">
            <summary>
            A DockControlCollection representing the collection of controls contained within the layout system.
            </summary>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.Collapsed">
            <summary>
            Indicates whether the layout system is collapsed (in auto-hide mode).
            </summary>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.SelectedControl">
            <summary>
            The dock control that is selected within the layout system.
            </summary>
            <remarks>
            <para>Only one dock control can be visible in a control layout system at one time. The tab for the selected dock control is drawn in a selected
            stage. This can be set to a null reference, but it is not recommended to do so.</para>
            </remarks>
        </member>
        <member name="T:TD.SandDock.ControlLayoutSystem.DockControlCollection">
            <summary>
            A collection of dock controls belonging to a ControlLayoutSystem.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.SetChildIndex(TD.SandDock.DockControl,System.Int32)">
            <summary>
            Used to move an existing dock control to a new offset in the collection.
            </summary>
            <param name="control">The control that needs to be moved.</param>
            <param name="index">The new tab offset for the control.</param>
            <remarks>
            <para>The control's offset in the collection governs the order in which its tab is displayed in the tabstrip.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.OnClear">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.OnClearComplete">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.AddRange(TD.SandDock.DockControl[])">
            <summary>
            Adds an array of dock controls in to the collection.
            </summary>
            <param name="controls">The array of controls to add.</param>
            <remarks>
            <para>When adding more than one control at a time to the collection you should use this method, as layout logic is postponed until after the
            whole batch had been added.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.Add(TD.SandDock.DockControl)">
            <summary>
            Adds a dock control to the collection.
            </summary>
            <param name="control">The control to add.</param>
            <returns>The new index of the control in the collection.</returns>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.Insert(System.Int32,TD.SandDock.DockControl)">
            <summary>
            Inserts a dock control in to the collection at a given offset.
            </summary>
            <param name="index">The position to insert the control at.</param>
            <param name="control">The control to insert.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.Remove(TD.SandDock.DockControl)">
            <summary>
            Removes the specified dock control from the collection.
            </summary>
            <param name="control">The control to remove.</param>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.Contains(TD.SandDock.DockControl)">
            <summary>
            Examines the collection to see if it contains the specified dock control.
            </summary>
            <param name="control">The control to look for.</param>
            <returns>A value indicating whether the control was found.</returns>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.IndexOf(TD.SandDock.DockControl)">
            <summary>
            Returns the index of a dock control in the collection.
            </summary>
            <param name="control">The control to look for.</param>
            <returns>The index of the dock control if found; otherwise -1.</returns>
        </member>
        <member name="M:TD.SandDock.ControlLayoutSystem.DockControlCollection.CopyTo(TD.SandDock.DockControl[],System.Int32)">
            <summary>
            Copies the contents of the collection in to the given array, starting at the specified offset.
            </summary>
            <param name="array">The array to be copied in to.</param>
            <param name="index">The index to start at.</param>
        </member>
        <member name="P:TD.SandDock.ControlLayoutSystem.DockControlCollection.Item(System.Int32)">
            <summary>
            Returns the dock control at the specified index in the collection.
            </summary>
        </member>
        <member name="T:TD.SandDock.DocumentContainer">
            <summary>
            An extended DockContainer to display a hierarchy of documents.
            </summary>
            <remarks>
            <para>This class extends the DockContainer class with methods for tracking and managing documents on a single level, irrespective of the
            hierarchy the documents may actually occupy.</para>
            <para>You should not use this class directly.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DocumentContainer.#ctor">
            <summary>
            Initializes a new instance of the DocumentContainer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentContainer.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentContainer.BorderStyle">
            <summary>
            The type of border to be drawn around the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentContainer.DisplayRectangle">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentContainer.DefaultSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentContainer.BackColor">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentContainer.Dock">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:TD.SandDock.TabbedDocument">
            <summary>
            An extended DockControl that will open docked in the center of your container.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabbedDocument.#ctor">
            <summary>
            Initializes a new instance of the TabbedDocument class.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabbedDocument.#ctor(TD.SandDock.SandDockManager,System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the TabbedDocument class, containing the specified control and with the specified text.
            </summary>
            <param name="manager">The SandDockManager responsible for layout of the control.</param>
            <param name="control">The control to host within the DockControl.</param>
            <param name="text">The text of the DockControl.</param>
        </member>
        <member name="M:TD.SandDock.TabbedDocument.CreateDockingRules">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabbedDocument.Open">
            <summary>
            Opens the document at its last known location, causing it to be the active document in its container if applicable.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabbedDocument.DefaultSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabbedDocument.CloseAction">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabbedDocument.PersistState">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.Office2007ColorScheme">
            <summary>
            Specifies a color scheme for use with the Office 2007 theme.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.Office2007ColorScheme.Blue">
            <summary>
            Elements have a blue appearance.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.Office2007ColorScheme.Silver">
            <summary>
            Elements have a silver appearance.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.Office2007ColorScheme.Black">
            <summary>
            Elements have a black appearance.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.WindowsColorScheme">
            <summary>
            One of the commonly used Windows color schemes.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.WindowsColorScheme.Automatic">
            <summary>
            SandDock will use the current visual style if available, otherwise fall back to standard Windows colours.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.WindowsColorScheme.Standard">
            <summary>
            SandDock will use standard windows colours.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.WindowsColorScheme.LunaBlue">
            <summary>
            SandDock will use colours from the Luna Blue theme in Windows XP.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.WindowsColorScheme.LunaOlive">
            <summary>
            SandDock will use colours from the Luna Olive theme in Windows XP.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.WindowsColorScheme.LunaSilver">
            <summary>
            SandDock will use colours from the Luna Silver theme in Windows XP.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.SandDockButtonType">
            <summary>
            A type of button present on titlebars in control layout systems.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.SandDockButtonType.Close">
            <summary>
            A close button.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.SandDockButtonType.Pin">
            <summary>
            A pushpin button.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.SandDockButtonType.ScrollLeft">
            <summary>
            A left-facing scroll button.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.SandDockButtonType.ScrollRight">
            <summary>
            A right-facing scroll button.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.SandDockButtonType.WindowPosition">
            <summary>
            A dropdown arrow for the window position menu.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.SandDockButtonType.ActiveFiles">
            <summary>
            A large arrow for accessing active files.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.TabTextDisplayMode">
            <summary>
            A method of displaying text on collapsed tabs.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.TabTextDisplayMode.AllTabs">
            <summary>
            Text is displayed on all tabs in a layout system.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.TabTextDisplayMode.SelectedTab">
            <summary>
            Text is only displayed on the selected tab in a layout system.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.BorderStyle">
            <summary>
            A type of border that can be drawn around a control.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.BorderStyle.None">
            <summary>
            Do not draw a border.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.BorderStyle.Flat">
            <summary>
            Draw a thin line.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.BorderStyle.RaisedThick">
            <summary>
            Draw a thick line with a raised appearance.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.BorderStyle.RaisedThin">
            <summary>
            Draw a thin line with a raised appearance.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.BorderStyle.SunkenThick">
            <summary>
            Draw a thick line with a sunken appearance.
            </summary>
        </member>
        <member name="F:TD.SandDock.Rendering.BorderStyle.SunkenThin">
            <summary>
            Draw a thin line with a sunken appearance.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockingRules">
            <summary>
            Represents rules associated with where a user can move a window.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockingRules.#ctor">
            <summary>
            Initializes a new instance of the DockingRules class.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockingRules.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DockingRules class.
            </summary>
            <param name="allowDock">Whether to allow docking.</param>
            <param name="allowTab">Whether to allow tabbing.</param>
            <param name="allowFloat">Whether to allow floating.</param>
        </member>
        <member name="P:TD.SandDock.DockingRules.AllowDockLeft">
            <summary>
            Indicates whether the user can dock the window to the left of the layout.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockingRules.AllowDockRight">
            <summary>
            Indicates whether the user can dock the window to the right of the layout.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockingRules.AllowDockTop">
            <summary>
            Indicates whether the user can dock the window at the top of the layout.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockingRules.AllowDockBottom">
            <summary>
            Indicates whether the user can dock the window at the bottom of the layout.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockingRules.AllowTab">
            <summary>
            Indicates whether the user can dock the window as a tabbed document.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockingRules.AllowFloat">
            <summary>
            Indicates whether the user can float the window.
            </summary>
        </member>
        <member name="T:TD.SandDock.UserDockableWindow">
            <summary>
            An extended DockControl that allows standalone editing within the designer.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockableWindow">
            <summary>
            An extended DockControl that will open docked to one of the sides of your container.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockableWindow.#ctor">
            <summary>
            Initializes a new instance of the DockableWindow class.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockableWindow.#ctor(TD.SandDock.SandDockManager,System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the DockableWindow class, containing the specified control and with the specified text.
            </summary>
            <param name="manager">The SandDockManager responsible for layout of the control.</param>
            <param name="control">The control to host within the DockControl.</param>
            <param name="text">The text of the DockControl.</param>
        </member>
        <member name="M:TD.SandDock.DockableWindow.CreateDockingRules">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.DockableWindow.Open">
            <summary>
            Opens the window at its last known location, ensuring it is the selected window in its tab group.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockableWindow.DefaultSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.UserDockableWindow.#ctor">
            <summary>
            Initializes a new instance of the UserDockableWindow class.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.BoxEdges">
            <summary>
            Represents the measurements of the edges of a container.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.BoxEdges.#ctor">
            <summary>
            Initializes a new instance of the BoxEdges class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.BoxEdges.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BoxEdges class, with the specified dimensions.
            </summary>
            <param name="left">The left dimension.</param>
            <param name="top">The top dimension.</param>
            <param name="right">The right dimension.</param>
            <param name="bottom">The bottom dimension.</param>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxEdges.Left">
            <summary>
            The left dimension.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxEdges.Top">
            <summary>
            The top dimension.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxEdges.Right">
            <summary>
            The right dimension.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxEdges.Bottom">
            <summary>
            The bottom dimension.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.BoxModel">
            <summary>
            Represents a "box" modelled with width, height, margin and padding metrics.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.BoxModel.#ctor">
            <summary>
            Initializes a new instance of the BoxModel class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.BoxModel.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BoxModel class, with the specified measurements.
            </summary>
            <param name="width">The width of the box.</param>
            <param name="height">The height of the box.</param>
            <param name="paddingLeft">The left padding dimension.</param>
            <param name="paddingTop">The top padding dimension.</param>
            <param name="paddingRight">The right padding dimension.</param>
            <param name="paddingBottom">The bottom padding dimension.</param>
            <param name="marginLeft">The left margin dimension.</param>
            <param name="marginTop">The top margin dimension.</param>
            <param name="marginRight">The right margin dimension.</param>
            <param name="marginBottom">The bottom margin dimension.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.BoxModel.RemovePadding(System.Drawing.Rectangle)">
            <summary>
            Adjusts the specified rectangle to account for the configured padding values.
            </summary>
            <param name="source">The rectangle to adjust.</param>
            <returns>A new rectangle without space taken up with padding.</returns>
        </member>
        <member name="M:TD.SandDock.Rendering.BoxModel.RemoveMargin(System.Drawing.Rectangle)">
            <summary>
            Adjusts the specified rectangle to account for the configured margin values.
            </summary>
            <param name="source">The rectangle to adjust.</param>
            <returns>A new rectangle without space taken up with margin.</returns>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.ExtraWidth">
            <summary>
            Gets the width to add to a measurement, governed by the left and right margin and padding values.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.ExtraHeight">
            <summary>
            Gets the height to add to a measurement, governed by the top and bottom margin and padding values.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.InnerSize">
            <summary>
            Gets the size of the box, without the margin values.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.Height">
            <summary>
            Gets/sets the height of the box.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.Width">
            <summary>
            Gets/sets the width of the box.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.Margin">
            <summary>
            Gets/sets the margin of the box.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.BoxModel.Padding">
            <summary>
            Gets/sets the padding of the box.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.EverettRenderer">
            <summary>
            Provides a renderer that mimics the appearance of Microsoft Visual Studio.NET 2003.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.#ctor">
            <summary>
            Initializes a new instance of the VS2003Renderer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.GetColorsFromSystem">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.AdjustDockControlClientBounds(TD.SandDock.ControlLayoutSystem,TD.SandDock.DockControl,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawControlClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawDocumentClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawDocumentStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawDockContainerBackground(System.Drawing.Graphics,TD.SandDock.DockContainer,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.MeasureTabStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.MeasureDocumentStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawDocumentStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden,
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawSplitter(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Orientation)">
            <summary>
            Overridden,
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawDocumentStripButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden,
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawTitleBarButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState,System.Boolean,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawTabStripBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawTabStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawAutoHideBarBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawCollapsedTab(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.DockSide,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawTitleBarBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.DrawTitleBarText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.String,System.Drawing.Font)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.FinishRenderSession">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.EverettRenderer.ToString">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.CollapsedTabOutlineColor">
            <summary>
            The colour to draw the outline of collapsed tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.BackgroundTabForeColor">
            <summary>
            The colour to draw the text on non-selected tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.HighlightColor">
            <summary>
            The colour to draw the highlights on 3d objects with.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.ShadowColor">
            <summary>
            The colour to draw the shadows on 3d objects with.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.TabStripBackgroundColor">
            <summary>
            The colour to draw the background of tabstrips with.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.InactiveTitleBarColor">
            <summary>
            The colour to draw the background of inactive titlebars with.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.ActiveTitleBarColor">
            <summary>
            The colours to draw the background of active titlebars with.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.TabTextDisplay">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.TitleBarMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.TabMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.TabStripMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.TabControlPadding">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.DocumentTabSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.DocumentTabStripSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.EverettRenderer.DocumentTabExtra">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:TD.SandDock.Design.DesignTimeKeyboardInteraction">
            <summary>
            See below in the OnDelete method for why this class is a big hack, though a necessary one.
            </summary>
        </member>
        <member name="T:TD.SandDock.Rendering.WhidbeyRenderer">
            <summary>
            Provides a renderer that mimics the appearance of Microsoft Visual Studio.NET 2005.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.#ctor">
            <summary>
            Initializes a new instance of the WhidbeyRenderer class.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.#ctor(TD.SandDock.Rendering.WindowsColorScheme)">
            <summary>
            Initializes a new instance of the WhidbeyRenderer class.
            </summary>
            <param name="colorScheme">The initial value of the ColorScheme property.</param>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.GetColorsFromSystem">
            <summary>
            Calculates secondary colours based on combinations of and alterations to the base colours.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.ApplyStandardColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.ApplyLunaBlueColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.ApplyLunaOliveColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.ApplyLunaSilverColors">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawDocumentStripBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawControlClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawDocumentClientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawDocumentStripButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.MeasureTabStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.MeasureDocumentStripTab(System.Drawing.Graphics,System.Drawing.Image,System.String,System.Drawing.Font,System.Windows.Forms.DrawItemState)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawDockContainerBackground(System.Drawing.Graphics,TD.SandDock.DockContainer,System.Drawing.Rectangle)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawDocumentStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.StartRenderSession(System.Drawing.Text.HotkeyPrefix)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawTabStripBackground(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawTabStripTab(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawCollapsedTab(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.DockSide,System.Drawing.Image,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.DrawItemState,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawTitleBarButton(System.Drawing.Graphics,System.Drawing.Rectangle,TD.SandDock.Rendering.SandDockButtonType,System.Windows.Forms.DrawItemState,System.Boolean,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawTitleBarBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.DrawTitleBarText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.String,System.Drawing.Font)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.Rendering.WhidbeyRenderer.ToString">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveDocumentBorderColor">
            <summary>
            The colour used to draw the border around an active document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveDocumentBorderColor">
            <summary>
            The colour used to draw the border around an inactive document tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.DocumentStripBackgroundColor1">
            <summary>
            The colour used to draw the top of the gradient on the background of a document strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.DocumentStripBackgroundColor2">
            <summary>
            The colour used to draw the bottom of the gradient on the background of a document strip.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveHotButtonBorderColor">
            <summary>
            The colour used to draw the border of a hot button on an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveHotButtonBackgroundColor">
            <summary>
            The colour used to draw the background of a hot button on an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveButtonBorderColor">
            <summary>
            The colour used to draw the border of a button on an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveButtonBackgroundColor">
            <summary>
            The colour used to draw the background of a button on an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveButtonBorderColor">
            <summary>
            The colour used to draw the border of a button on an inactive dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveButtonBackgroundColor">
            <summary>
            The colour used to draw the background of a button on an inactive dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveTitleBarForegroundColor">
            <summary>
            The colour used to draw the foreground of an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveTitleBarBackgroundColor2">
            <summary>
            The colour used to draw the background of an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveTitleBarBackgroundColor1">
            <summary>
            The colour used to draw the background of an active dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveTitleBarForegroundColor">
            <summary>
            The colour used to draw the foreground of an inactive dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveTitleBarBackgroundColor">
            <summary>
            The colour used to draw the background of an inactive dockable window titlebar.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveDocumentShadowColor">
            <summary>
            The colour used to draw the shadow of an active document.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveDocumentShadowColor">
            <summary>
            The colour used to draw the shadow of an inactive document.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.InactiveDocumentHighlightColor">
            <summary>
            The colour used to draw the highlight of an inactive document.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ActiveDocumentHighlightColor">
            <summary>
            The colour used to draw the highlight of an active document.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.ImageSize">
            <summary>
            The size of image to draw in window tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.TabControlPadding">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.DocumentTabSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.DocumentTabStripSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.DocumentTabExtra">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.TitleBarMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.TabMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.TabStripMetrics">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.Rendering.WhidbeyRenderer.TabTextDisplay">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:TD.SandDock.SplitLayoutSystem">
            <summary>
            A layout system for grouping other layout systems together.
            </summary>
            <remarks>
            <para>A SandDock hierarchy consists of many dock controls grouped in to many control layout systems. These layout systems are then organised
            by SplitLayoutSystems, with splitters in between for resizing them.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.#ctor">
            <summary>
            Initializes a new instance of the SplitLayoutSystem class.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class, with the specified initial dimensions.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.#ctor(System.Int32,System.Int32,System.Windows.Forms.Orientation,TD.SandDock.LayoutSystemBase[])">
            <summary>
            Initializes a new instance of the ControlLayoutSystem class, with the specified initial dimensions, the specified split orientation and the specified
            child layout systems.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
            <param name="splitMode">The orientation of splitters within this layout system.</param>
            <param name="layoutSystems">An array of layout systems to populate this layout system with.</param>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.#ctor(System.Drawing.SizeF,System.Windows.Forms.Orientation,TD.SandDock.LayoutSystemBase[])">
            <summary>
            Initializes a new instance of the SplitLayoutSystem class, with the specified initial dimensions, the specified split orientation and the specified
            child layout systems.
            </summary>
            <param name="workingSize">The working size of the layout system.</param>
            <param name="splitMode">The orientation of splitters within this layout system.</param>
            <param name="layoutSystems">An array of layout systems to populate this layout system with.</param>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.Optimize">
            <summary>
            Optimizes the layout system and all its children by removing unneeded layout systems.
            </summary>
            <returns>A boolean value indicating whether any changes were made to the layout hierarchy.</returns>
            <remarks>
            <para>When repeatedly changing a complex layout hierarchy it is easy to eventually end up with layout systems that are not needed. An example of this
            is a SplitLayoutSystem that contains other SplitLayoutSystems with the same split orientation. This method analyses the layout hierarchy and makes
            changes to it to prune layout systems such as the above example.</para>
            <para>This method is called internally from time to time to ensure that your layout system is as clean as possible.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.MoveToLayoutSystem(TD.SandDock.ControlLayoutSystem)">
            <summary>
            Moves this layout system in to a control layout system.
            </summary>
            <param name="layoutSystem">The control layout system to move in to.</param>
            <remarks>
            <para>Any split layout systems below the heirarchy are removed and their control layout systems flattened prior to being added to the control
            layout system.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.MoveToLayoutSystem(TD.SandDock.ControlLayoutSystem,System.Int32)">
            <summary>
            Moves this layout system in to a control layout system, at the specified offset.
            </summary>
            <param name="layoutSystem">The control layout system to move in to.</param>
            <param name="index">The offset of the new tabs in the existing layout system.</param>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.Layout(TD.SandDock.Rendering.RendererBase,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.SplitLayoutSystem.SplitMode">
            <summary>
            The orientation of the splitters within this layout system.
            </summary>
            <remarks>
            <para>Splitters can be horizontal (default) or vertical. With horizontal splitters, child layout systems are laid out vertically one by one down the
            parent layout system. With vertical splitters they are laid out horizontally.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SplitLayoutSystem.LayoutSystems">
            <summary>
            The child layout systems belonging to this layout system.
            </summary>
            <remarks>
            <para>Child layout systems are laid out according to the SplitMode property, with splitters between them.</para>
            </remarks>
        </member>
        <member name="T:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection">
            <summary>
            A collection of layout systems belonging to a split layout system.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.OnClear">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.OnClearComplete">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.AddRange(TD.SandDock.LayoutSystemBase[])">
            <summary>
            Adds an array of layout systems in to the collection.
            </summary>
            <param name="layoutSystems">The array of layout systems to add.</param>
            <remarks>
            <para>When adding more than one layout system at a time to the collection you should use this method, as layout logic is postponed until
            after the whole batch has been added.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.Add(TD.SandDock.LayoutSystemBase)">
            <summary>
            Adds a layout system to the collection.
            </summary>
            <param name="layoutSystem">The layout system to add.</param>
            <returns>The new index of the layout system in the collection.</returns>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.Insert(System.Int32,TD.SandDock.LayoutSystemBase)">
            <summary>
            Inserts a layout system in to the collection at a given offset.
            </summary>
            <param name="index">The position to insert the layout system at.</param>
            <param name="layoutSystem">The layout system to insert.</param>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.Remove(TD.SandDock.LayoutSystemBase)">
            <summary>
            Removes the specified layout system from the collection.
            </summary>
            <param name="layoutSystem">The layout system to remove.</param>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.Contains(TD.SandDock.LayoutSystemBase)">
            <summary>
            Examines the collection to see if it contains the specified layout system.
            </summary>
            <param name="layoutSystem">The layout system to look for.</param>
            <returns>A value indicating whether the layout system was found.</returns>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.IndexOf(TD.SandDock.LayoutSystemBase)">
            <summary>
            Returns the index of a layout system in the collection.
            </summary>
            <param name="layoutSystem">The layout system to look for.</param>
            <returns>The index of the layout system if found; otherwise -1.</returns>
        </member>
        <member name="M:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.CopyTo(TD.SandDock.LayoutSystemBase[],System.Int32)">
            <summary>
            Copies the contents of the collection in to the given array, starting at the specified offset.
            </summary>
            <param name="array">The array to be copied in to.</param>
            <param name="index">The index to start at.</param>
        </member>
        <member name="P:TD.SandDock.SplitLayoutSystem.LayoutSystemBaseCollection.Item(System.Int32)">
            <summary>
            Returns the layout system at the specified index in the collection.
            </summary>
        </member>
        <member name="T:TD.SandDock.DocumentContainerWindowOpenPosition">
            <summary>
            Specifies the position at which a new document window is opened.
            </summary>
        </member>
        <member name="F:TD.SandDock.DocumentContainerWindowOpenPosition.First">
            <summary>
            The window is opened as the first in the group.
            </summary>
        </member>
        <member name="F:TD.SandDock.DocumentContainerWindowOpenPosition.Last">
            <summary>
            The window is opened as the last in the group.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockSituation">
            <summary>
            Specifies the general situation of a dockable window.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSituation.None">
            <summary>
            The window is closed or in an unrecognised container.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSituation.Docked">
            <summary>
            The window is docked.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSituation.Document">
            <summary>
            The window is a tabbed document.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSituation.Floating">
            <summary>
            The window is floating.
            </summary>
        </member>
        <member name="T:TD.SandDock.DocumentOverflowMode">
            <summary>
            Specifies how a large list of available document tabs is handled.
            </summary>
        </member>
        <member name="F:TD.SandDock.DocumentOverflowMode.None">
            <summary>
            No means is provided to access overflowed tabs.
            </summary>
        </member>
        <member name="F:TD.SandDock.DocumentOverflowMode.Scrollable">
            <summary>
            The tabs are scrollable and scroll buttons are displayed to access them.
            </summary>
        </member>
        <member name="F:TD.SandDock.DocumentOverflowMode.Menu">
            <summary>
            The tabs are fixed and a menu is used to access them.
            </summary>
        </member>
        <member name="T:TD.SandDock.ContextMenuContext">
            <summary>
            Specifies a method in which a context menu on a window can be shown.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContextMenuContext.Keyboard">
            <summary>
            The menu is being shown as a result of a keyboard shortcut.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContextMenuContext.RightClick">
            <summary>
            The menu is being shown as a result of a right-click on a tab or titlebar.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContextMenuContext.OptionsButton">
            <summary>
            The menu is being shown as a result of a click on the options button.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContextMenuContext.Other">
            <summary>
            The menu is being shown as a result of another operation. Currently this is only used when a drag operation fails and a context menu should be shown.
            </summary>
        </member>
        <member name="T:TD.SandDock.WindowOpenMethod">
            <summary>
            A method of opening a SandDock window.
            </summary>
        </member>
        <member name="F:TD.SandDock.WindowOpenMethod.OnScreen">
            <summary>
            The window will be brought onscreen, but will not be selected or activated. This is useful for tabbed documents that need to be opened in the background.
            </summary>
        </member>
        <member name="F:TD.SandDock.WindowOpenMethod.OnScreenSelect">
            <summary>
            The window will be brought onscreen and will become the selected window in its tab group, but will not be focused.
            </summary>
        </member>
        <member name="F:TD.SandDock.WindowOpenMethod.OnScreenActivate">
            <summary>
            The window will be brought onscreen, selected in its tab group, and will be given the focus.
            </summary>
        </member>
        <member name="T:TD.SandDock.TabLayout">
            <summary>
            A method of layout out tabs relative to their windows.
            </summary>
        </member>
        <member name="F:TD.SandDock.TabLayout.SingleLineScrollable">
            <summary>
            The tabs will be laid out in a single line, with scroll buttons to access tabs not currently shown.
            </summary>
        </member>
        <member name="F:TD.SandDock.TabLayout.SingleLineFixed">
            <summary>
            The tabs will be laid out in a single line, shrunk if necessary to fit the available size.
            </summary>
        </member>
        <member name="F:TD.SandDock.TabLayout.MultipleLine">
            <summary>
            The tabs will be laid out in multiple lines.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockControlCloseAction">
            <summary>
            The action to take when a DockControl is closed.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockControlCloseAction.HideOnly">
            <summary>
            The DockControl is hidden from view, and can be shown again via the Open method.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockControlCloseAction.Dispose">
            <summary>
            The DockControl is disposed and removed from the layout.
            </summary>
        </member>
        <member name="T:TD.SandDock.ContainerDockEdge">
            <summary>
            An edge of a container to which an object can be docked.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockEdge.Inside">
            <summary>
            The inside edge of the container.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockEdge.Outside">
            <summary>
            The outside edge of the container.
            </summary>
        </member>
        <member name="T:TD.SandDock.ContainerDockLocation">
            <summary>
            A location within a container at which an object can be docked.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockLocation.Left">
            <summary>
            The left-hand side of the container.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockLocation.Right">
            <summary>
            The right-hand side of the container.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockLocation.Top">
            <summary>
            The top of the container.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockLocation.Bottom">
            <summary>
            The bottom of the container.
            </summary>
        </member>
        <member name="F:TD.SandDock.ContainerDockLocation.Center">
            <summary>
            The middle of the container.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockingManager">
            <summary>
            A method of user interaction during docking operations.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockingManager.Standard">
            <summary>
            Locations of docked windows are governed by pointing to different locations within existing layout systems.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockingManager.Whidbey">
            <summary>
            Locations of docked windows are governed by using popup windows with arrows.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockSide">
            <summary>
            A side of a DockControl to potentially dock an object to.
            </summary>
            <remarks>
            <para>When None is used, the object is docked alongside the DockControl with tabs displayed to choose between them.</para>
            </remarks>
        </member>
        <member name="F:TD.SandDock.DockSide.Top">
            <summary>
            The object will be docked above the DockControl.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSide.Bottom">
            <summary>
            The object will be docked below the DockControl.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSide.Left">
            <summary>
            The object will be docked to the left of the DockControl.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSide.Right">
            <summary>
            The object will be docked to the right of the DockControl.
            </summary>
        </member>
        <member name="F:TD.SandDock.DockSide.None">
            <summary>
            The object will be docked at the same level as the DockControl.
            </summary>
        </member>
        <member name="T:TD.SandDock.LayoutUtilities">
            <summary>
            Provides a set of useful methods for dealing with complex docking scenarios.
            </summary>
        </member>
        <member name="M:TD.SandDock.LayoutUtilities.FindControlLayoutSystem(TD.SandDock.DockContainer)">
            <summary>
            Locates the first instance of a ControlLayoutSystem within a DockContainer.
            </summary>
            <param name="container">The DockContainer in which to look.</param>
            <returns>The first available ControlLayoutSystem in the container. If no ControlLayoutSystem is found, a null reference is returned.</returns>
        </member>
        <member name="T:TD.SandDock.SandDockLanguage">
            <summary>
            Contains global text strings used by SandDock in rendering.
            </summary>
        </member>
        <member name="M:TD.SandDock.SandDockLanguage.ShowCachedAssemblyError(System.Reflection.Assembly,System.Reflection.Assembly)">
            <summary>
            This method is used by internal SandDock designers and is not intended to be used by other code.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockLanguage.ActiveFilesText">
            <summary>
            The text displayed in the tooltip for the active files list.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockLanguage.WindowPositionText">
            <summary>
            The text displayed in the tooltip for window position buttons.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockLanguage.ScrollRightText">
            <summary>
            The text displayed in the tooltip for scroll right buttons.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockLanguage.ScrollLeftText">
            <summary>
            The text displayed in the tooltip for scroll left buttons.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockLanguage.CloseText">
            <summary>
            The text displayed in the tooltip for close buttons.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockLanguage.AutoHideText">
            <summary>
            The text displayed in the tooltip for autohide buttons.
            </summary>
        </member>
        <member name="T:TD.SandDock.DocumentLayoutSystem">
            <summary>
            A layout system for presenting DockControls in a tabbed mdi interface.
            </summary>
            <remarks>
            <para>This class extends <see cref="T:TD.SandDock.ControlLayoutSystem"/> to provide tabbed mdi functionality.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.#ctor">
            <summary>
            Initializes a new instance of the DocumentLayoutSystem class.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the DocumentLayoutSystem class, with the specified initial dimensions.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.#ctor(System.Int32,System.Int32,TD.SandDock.DockControl[],TD.SandDock.DockControl)">
            <summary>
            Initializes a new instance of the DocumentLayoutSystem class, with the specified initial dimensions, and with the specified child controls.
            </summary>
            <param name="desiredWidth">The desired width of this layout system, in pixels.</param>
            <param name="desiredHeight">The desired height of this layout system, in pixels.</param>
            <param name="controls">An array of DockControls to populate this layout system with.</param>
            <param name="selectedControl">The control to be made selected.</param>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.#ctor(System.Drawing.SizeF,TD.SandDock.DockControl[],TD.SandDock.DockControl)">
            <summary>
            Initializes a new instance of the DocumentLayoutSystem class, with the specified working size, and with the specified child controls.
            </summary>
            <param name="workingSize">The working size of the layout system.</param>
            <param name="windows">An array of DockControls to populate this layout system with.</param>
            <param name="selectedWindow">The control to be made selected.</param>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.OnMouseLeave">
            <summary>
            Overridden. Consult the documentation on the base virtual member for more information.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.GetControlAt(System.Drawing.Point)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.CalculateLayout(TD.SandDock.Rendering.RendererBase,System.Drawing.Rectangle,System.Boolean,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.DocumentLayoutSystem.Layout(TD.SandDock.Rendering.RendererBase,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentLayoutSystem.LeftScrollButtonBounds">
            <summary>
            The area occupied by the left scroll button.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentLayoutSystem.RightScrollButtonBounds">
            <summary>
            The area occupied by the right scroll button.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentLayoutSystem.Collapsed">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentLayoutSystem.LeftPadding">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentLayoutSystem.RightPadding">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.DocumentLayoutSystem.SelectedControl">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.AutoHideBar.PopupSize">
            <summary>
            Used by DockControls to relay changes to their PopupSize to the popup, if it's showing
            </summary>
        </member>
        <member name="T:TD.SandDock.AutoHideBar.HideControlDelegate">
            <summary>
            Now using a delegate to do this because disposing the popup during a form layout operation would not force the form to do another layout when it has finished.
            This is the best .net alternative to posting ourselves a message, which is pretty much what BeginInvoke does anyway.
            </summary>
        </member>
        <member name="T:TD.SandDock.UserTabbedDocument">
            <summary>
            An extended DockControl that allows standalone editing within the designer.
            </summary>
        </member>
        <member name="M:TD.SandDock.UserTabbedDocument.#ctor">
            <summary>
            Initializes a new instance of the UserTabbedDocument class.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockControlEventHandler">
            <summary>
            Represents a method that will handle events with associated DockControls.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockControlClosingEventHandler">
            <summary>
            Represents the method that will handle events raised when a window is about to be closed.
            </summary>
        </member>
        <member name="T:TD.SandDock.ResolveDockControlEventHandler">
            <summary>
            Represents the method that will handle DockControl resolving events.
            </summary>
        </member>
        <member name="T:TD.SandDock.ActiveFilesListEventHandler">
            <summary>
            Represents the method that will handle active files list events.
            </summary>
        </member>
        <member name="T:TD.SandDock.ActiveFilesListEventArgs">
            <summary>
            Arguments describing an event dealing with a list of active files.
            </summary>
        </member>
        <member name="P:TD.SandDock.ActiveFilesListEventArgs.Windows">
            <summary>
            The list of windows to choose from.
            </summary>
        </member>
        <member name="P:TD.SandDock.ActiveFilesListEventArgs.Control">
            <summary>
            The control on which to show a menu.
            </summary>
        </member>
        <member name="P:TD.SandDock.ActiveFilesListEventArgs.Position">
            <summary>
            The position, in control coordinates, at which to show a menu.
            </summary>
        </member>
        <member name="T:TD.SandDock.ResolveDockControlEventArgs">
            <summary>
            Provides event data describing a DockControl reference for the consumer to resolve.
            </summary>
        </member>
        <member name="P:TD.SandDock.ResolveDockControlEventArgs.Guid">
            <summary>
            The unique identifier of the DockControl to resolve.
            </summary>
        </member>
        <member name="P:TD.SandDock.ResolveDockControlEventArgs.DockControl">
            <summary>
            The DockControl that the Guid property references.
            </summary>
            <remarks>
            <para>The consumer of this event should set this property.</para>
            </remarks>
        </member>
        <member name="T:TD.SandDock.DockControlClosingEventArgs">
            <summary>
            Provides event data describing a window that is about to be closed.
            </summary>
        </member>
        <member name="T:TD.SandDock.DockControlEventArgs">
            <summary>
            Provides event data describing a DockControl.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControlEventArgs.DockControl">
            <summary>
            The DockControl associated with this event.
            </summary>
        </member>
        <member name="P:TD.SandDock.DockControlClosingEventArgs.Cancel">
            <summary>
            Indicates whether the action that would normally follow the event should be cancelled.
            </summary>
        </member>
        <member name="T:TD.SandDock.ShowControlContextMenuEventHandler">
            <summary>
            Represents the method that will handle the ShowControlContextMenu event.
            </summary>
        </member>
        <member name="T:TD.SandDock.ShowControlContextMenuEventArgs">
            <summary>
            Provides event data describing how to show a context menu for a DockControl.
            </summary>
        </member>
        <member name="P:TD.SandDock.ShowControlContextMenuEventArgs.Context">
            <summary>
            The context in which the menu is being shown.
            </summary>
        </member>
        <member name="P:TD.SandDock.ShowControlContextMenuEventArgs.Position">
            <summary>
            The position, in DockContainer client coordinates, to show the context menu.
            </summary>
        </member>
        <member name="T:TD.SandDock.SandDockManager">
            <summary>
            The manager class in charge of a SandDock layout.
            </summary>
            <remarks>
            <para>The SandDockManager class is responsible for linking together the many DockContainers that make up a SandDock layout. DockContainers
            should not exist without being bound to one.</para>
            <para>This class provides a central location for global properties that affect rendering, docking hints and layout persistance.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SandDockManager.#ctor">
            <summary>
            Initializes a new instance of the SandDockManager class.
            </summary>
        </member>
        <member name="M:TD.SandDock.SandDockManager.FindMostRecentlyUsedWindow">
            <summary>
            Finds the window that most recently received input focus.
            </summary>
            <returns>The window, if found.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.FindMostRecentlyUsedWindow(TD.SandDock.DockSituation)">
            <summary>
            Finds the window that most recently received input focus.
            </summary>
            <param name="dockSituation">The dock situation in which to find the window.</param>
            <returns>The window, if found.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnShowActiveFilesList(TD.SandDock.ActiveFilesListEventArgs)">
            <summary>
            Raises the ShowActiveFilesList event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.CreateNewDockContainerCore(TD.SandDock.ContainerDockLocation)">
            <summary>
            Creates a new DockContainer suitable for display at the specified position.
            </summary>
            <param name="dockLocation">The position in a container at which the DockContainer will reside.</param>
            <returns>A new DockContainer.</returns>
            <remarks>
            <para>Developers should override this method when they wish their own, derived DockContainer to be used instead of the default class. The default implementation of this method creates an instance of
            DocumentContainer if the centre of the container is specified and tabbed documents are enabled, otherwise it creates an instance of DockContainer.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SandDockManager.CreateNewDockContainer(TD.SandDock.ContainerDockLocation,TD.SandDock.ContainerDockEdge,System.Int32)">
            <summary>
            Creates a new DockContainer in the registered DockSystemContainer.
            </summary>
            <param name="dockLocation">The position in the container at which the DockContainer will reside.</param>
            <param name="edge">The edge at which the DockContainer will reside.</param>
            <param name="contentSize">The size of the content within the dock container.</param>
            <returns>The newly created DockContainer.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnShowControlContextMenu(TD.SandDock.ShowControlContextMenuEventArgs)">
            <summary>
            Raises the ShowControlContextMenu event.
            </summary>
            <param name="e">A ShowControlContextMenuEventArgs that contains the event data.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnDockControlAdded(TD.SandDock.DockControlEventArgs)">
            <summary>
            Raises the DockControlAdded event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnDockControlRemoved(TD.SandDock.DockControlEventArgs)">
            <summary>
            Raises the DockControlRemoved event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnDockControlActivated(TD.SandDock.DockControlEventArgs)">
            <summary>
            Raises the DockControlActivated event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.SetLayout(System.String)">
            <summary>
            Loads a layout of docked and floating windows from a string previously obtained from the GetLayout method.
            </summary>
        </member>
        <member name="M:TD.SandDock.SandDockManager.FindControl(System.Guid)">
            <summary>
            Locates a DockControl by its Guid property.
            </summary>
            <param name="guid">The Guid of the control to locate.</param>
            <returns>The corresponding control, if one was found. If no control is found a null reference is returned.</returns>
            <remarks>
            <para>If no control is found this method raises the ResolveDockControl event to ask the host application to locate the DockControl.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.SandDockManager.SaveLayout">
            <summary>
            Saves the layout into the default windows forms settings repository.
            </summary>
        </member>
        <member name="M:TD.SandDock.SandDockManager.LoadLayout">
            <summary>
            Loads the layout from the default windows forms settings repository.
            </summary>
        </member>
        <member name="M:TD.SandDock.SandDockManager.GetLayout">
            <summary>
            Creates a string representing the current layout of docked and floating windows.
            </summary>
            <returns>A string containing layout information.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.GetDockControls">
            <summary>
            Gets all DockControls known by the manager.
            </summary>
            <returns>An array containing the controls.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.GetDockControls(TD.SandDock.DockSituation)">
            <summary>
            Gets all windows known by the manager in a specific dock situation.
            </summary>
            <param name="dockSituation">The dock situation with which to filter the list.</param>
            <returns>An array of windows.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.GetDockContainers">
            <summary>
            Gets all DockContainers known by the manager.
            </summary>
            <returns>An array containing the containers.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.FindDockContainer(TD.SandDock.ContainerDockLocation)">
            <summary>
            Returns the first DockContainer found at the location provided.
            </summary>
            <param name="location">The location at which to look for a DockContainer.</param>
            <returns>A DockContainer instance docked at the specified location.</returns>
        </member>
        <member name="M:TD.SandDock.SandDockManager.Dispose(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnDockControlClosing(TD.SandDock.DockControlClosingEventArgs)">
            <summary>
            Raises the DockControlClosing event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnDockingStarted(System.EventArgs)">
            <summary>
            Raises the DockingStarted event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnDockingFinished(System.EventArgs)">
            <summary>
            Raises the DockingFinished event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnResolveDockControl(TD.SandDock.ResolveDockControlEventArgs)">
            <summary>
            Raises the ResolveDockControl event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.OnActiveTabbedDocumentChanged(System.EventArgs)">
            <summary>
            Raises the ActiveTabbedDocumentChanged event.
            </summary>
            <param name="e">The arguments associated with the event</param>
        </member>
        <member name="M:TD.SandDock.SandDockManager.ActivateProduct(System.String)">
            <summary>
            Activates the product for build machines and machines where no design-time support is required.
            </summary>
            <param name="licenseKey">The license key to activate the product.</param>
        </member>
        <member name="E:TD.SandDock.SandDockManager.DockingStarted">
            <summary>
            Raised when the user starts dragging a control or layout system.
            </summary>
            <remarks>
            This event can be used to present the user (via a statusbar or similar) with some helpful text describing how to manipulate controls in a redocking
            operation.
            </remarks>
        </member>
        <member name="E:TD.SandDock.SandDockManager.DockingFinished">
            <summary>
            Raised when a docking or dragging operation has been completed.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.ShowControlContextMenu">
            <summary>
            Raised when the context menu for a DockControl should be shown.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.DockControlActivated">
            <summary>
            Raised when a new dockable window receives the input focus.
            </summary>
            <remarks>
            <para>This event should be used instead of the standard Enter or GotFocus events as it caters for floating windows as well as docked.</para>
            </remarks>
        </member>
        <member name="E:TD.SandDock.SandDockManager.DockControlAdded">
            <summary>
            Raised when a new DockControl is added to the layout.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.DockControlRemoved">
            <summary>
            Raised when a DockControl is removed from the layout.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.ResolveDockControl">
            <summary>
            Raised during layout deserialization when a DockControl cannot be found.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.ActiveTabbedDocumentChanged">
            <summary>
            Raised when a new tabbed document becomes active.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.DockControlClosing">
            <summary>
            Raised when a <see cref="T:TD.SandDock.DockControl"/> is about to be closed.
            </summary>
        </member>
        <member name="E:TD.SandDock.SandDockManager.ShowActiveFilesList">
            <summary>
            Raised when a list of active files should be displayed for the user to choose from.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.ActiveTabbedDocument">
            <summary>
            Indicates the last tabbed document to contain the focus.
            </summary>
            <remarks>
            <para>This method will throw an InvalidOperationException if there is no tabbed document system in operation.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.EnableEmptyEnvironment">
            <summary>
            Indicates whether an empty container is left when all tabbed documents have been removed.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.BorderStyle">
            <summary>
            The type of border to be drawn around the tabbed document area.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.DocumentContainer">
            <summary>
            Retrieves the DocumentContainer in the current SandDock layout.
            </summary>
            <remarks>
            <para>This property will return a null reference if there is no DocumentContainer.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.DocumentOverflow">
            <summary>
            Determines how document tabs that overflow past the visible area are accessed.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.DocumentOpenPosition">
            <summary>
            Specifies whether documents are opened at the first position or the last.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.IntegralClose">
            <summary>
            Indicates whether the close button is displayed inside the active tab.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.EnableTabbedDocuments">
            <summary>
            Indicates whether tabbed documents can be shown in the centre of the container.
            </summary>
            <remarks>
            <para>If set to false, normal dockable windows will be shown in the centre rather than tabbed documents. Some application vendors prefer
            to use this design where the whole container appears to be filled with dockable windows.</para>
            <para>This property will throw an exception if its value is changed while there are DockControls being shown in the centre of the container. It
            should only be set before any DockControls are created, or alternatively after closing any existing ones.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.Documents">
            <summary>
            Gets all tabbed documents in the current window layout that are docked in the centre of the container.
            </summary>
            <remarks>
            <para>This method retrieves only tabbed documents that are docked in the centre of the container. If you have enabled floating or docking
            to other sides of the form you will need to keep track of your documents programmatically as they cannot be distinguished from dockable
            windows by the manager.</para>
            <para>If there are no tabbed documents, this method returns an empty array.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.AutoSaveLayout">
            <summary>
            Indicates whether the user-configured window layout is automatically persisted.
            </summary>
            <remarks>
            <para>When set to true, the SaveSettings and LoadSettings methods are automatically called at the correct points, serializing layout into the default
            windows forms settings repository. This feature is only active when a debugger is not attached to the application.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.AllowKeyboardNavigation">
            <summary>
            Indicates whether the user will be able to use the keyboard to navigate between tabbed documents and dockable windows.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.AllowMiddleButtonClosure">
            <summary>
            Indicates whether the middle mouse button can be used to close windows by their tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.RaiseValidationEvents">
            <summary>
            Indicates whether standard validation events are fired when the user changes tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.SelectTabsOnDrag">
            <summary>
            Indicates whether window groups will respond when an OLE drag operation occurs over their tabs.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.SerializeTabbedDocuments">
            <summary>
            Indicates whether tabbed document layout will be serialized alongside dockable window layout.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.AllowDockContainerResize">
            <summary>
            Indicates whether DockContainers can be resized by the user.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.DockSystemContainer">
            <summary>
            The control that will act as a host for all docked windows. You should rarely, if ever, need to change this property.
            </summary>
            <remarks>
            <para>SandDock uses one central host for its docked windows. In rare circumstances you may want to change this container from the default
            after adding SandDock - for example you may want the SandDock system kept within a panel on your form rather than simply in the form itself.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.DockingHints">
            <summary>
            Indicates the type of visual artifacts drawn to the screen to indicate size and position while docking.
            </summary>
            <remarks>
            <para>While any kind of moving, docking or resizing operation is in progress artifacts are drawn to the screen to show the potential impact of
            committing the layout change. SandDock supports more than one style of artifact, and this property controls which is active.</para>
            <para>The default is TranslucentFill, which masks the area with a translucent selection colour. This option is only available on Windows 2000 and
            later operating systems. If running on a previous operating system, SandDock will revert to the RubberBand drawing style.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.MinimumDockContainerSize">
            <summary>
            Indicates the minimum size of a docked strip of toolwindows.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.MaximumDockContainerSize">
            <summary>
            Indicates the maximum size of a docked strip of toolwindows.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.DockingManager">
            <summary>
            Indicates the method of user interaction during a docking operation.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.OwnerForm">
            <summary>
            The form that owns the SandDock hierarchy this manager is responsible for.
            </summary>
            <remarks>
            <para>This property must be set to ensure correct behaviour of the layout system as SandDock depends on certain events raised by the form. You
            can only set this property once.</para>
            </remarks>
        </member>
        <member name="P:TD.SandDock.SandDockManager.Renderer">
            <summary>
            The renderer used to calculate object metrics and draw contents.
            </summary>
        </member>
        <member name="P:TD.SandDock.SandDockManager.Site">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Divelements.Util.Registration.DivelementsLicenseProvider.GetSavedLicenseKey(System.ComponentModel.LicenseContext,System.Type)">
            <summary>
            This method is necessary because the default implementation of GetSavedLicenseKey only checks the entry assembly, as long as there is an entry assembly which there nearly
            always is. So, in the case of failure, this method manally enumerates all loaded managed assemblies (something the default method really should fall back to) and tries to get
            a key from them. This will result in the key always being found, as long as it's there somewhere.
            </summary>
        </member>
        <member name="T:TD.SandDock.TabControl">
            <summary>
            An extended DockContainer suitable for use as a simple tab control.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.#ctor">
            <summary>
            Initializes a new instance of the TabControl class.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.CreateControlsInstance">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.Dispose(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnResize(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.GetTabPageAt(System.Drawing.Point)">
            <summary>
            Finds the TabPage whose tab contains the specified coordinates.
            </summary>
            <param name="position">The coordinates at which to look.</param>
            <returns>The TagPage found, if any.</returns>
        </member>
        <member name="M:TD.SandDock.TabControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnGotFocus(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnLostFocus(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.ProcessMnemonic(System.Char)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnFontChanged(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.OnSelectedPageChanged(System.EventArgs)">
            <summary>
            Raises the SelectedPageChanged event.
            </summary>
            <param name="e">The arguments associated with the event.</param>
        </member>
        <member name="E:TD.SandDock.TabControl.SelectedPageChanged">
            <summary>
            Raised when the SelectedPage property changes.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.TabLayout">
            <summary>
            How the tabs of child controls are laid out.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.Renderer">
            <summary>
            The renderer used to calculate object metrics and draw contents.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.AllowScrolling">
            <summary>
            Indicates whether the user will be able to scroll when the tabs exceed the width of the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.DisplayRectangle">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.BorderStyle">
            <summary>
            The type of border to be drawn around the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.TabPages">
            <summary>
            A collection of TabPage controls belonging to this control.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.DefaultSize">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.Text">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.SelectedIndex">
            <summary>
            Indicates the numeric index of the currently selected page within the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.SelectedPage">
            <summary>
            Indicates the page that is currently selected within the control.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.LayoutSystem">
            <summary>
            This property is obsolete and provided for backward compatibility reasons only.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.TabStripBounds">
            <summary>
            The area of the control occupied by the tabstrip.
            </summary>
        </member>
        <member name="T:TD.SandDock.TabControl.TabPageCollection">
            <summary>
            A collection of TabPage objects.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.SetChildIndex(TD.SandDock.TabPage,System.Int32)">
            <summary>
            Sets the index of the specified TabPage to the specified value.
            </summary>
            <param name="tabPage">The TabPage whose index will be changed.</param>
            <param name="index">The new index for the TabPage.</param>
            <remarks>
            <para>This method can be used to change the order of the TabPages in a TabControl.</para>
            </remarks>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the tab page at the specified index from the collection.
            </summary>
            <param name="index">The 0-based index of the TabPage to remove.</param>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.Clear">
            <summary>
            Removes all the tab pages from the collection.
            </summary>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.GetEnumerator">
            <summary>
            Returns an enumeration of all the tab pages in the collection.
            </summary>
            <returns>An IEnumerator for the TabControl.TabPageCollection.</returns>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.CopyTo(TD.SandDock.TabPage[],System.Int32)">
            <summary>
            Copies the child controls stored in the TabPageCollection object to a System.Array object, beginning at the specified index location in the Array.
            </summary>
            <param name="array">The Array to copy the child controls to.</param>
            <param name="index">The zero-based relative index in array where copying begins.</param>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.Contains(TD.SandDock.TabPage)">
            <summary>
            Determines whether a specified tab page is in the collection.
            </summary>
            <param name="tabPage">The TabPage to locate in the collection.</param>
            <returns>True if the specified TabPage is in the collection; otherwise, false</returns>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.AddRange(TD.SandDock.TabPage[])">
            <summary>
            Adds a set of tab pages to the collection.
            </summary>
            <param name="tabPages">An array of type TabPage that contains the tab pages to add.</param>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.Remove(TD.SandDock.TabPage)">
            <summary>
            Removes a TabPage from the collection.
            </summary>
            <param name="tabPage">The TabPage to remove.</param>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.IndexOf(TD.SandDock.TabPage)">
            <summary>
            Returns the index of the specified tab page in the collection.
            </summary>
            <param name="tabPage">The TabPage to locate in the collection.</param>
            <returns>The 0-based index of the tab page; -1 if it cannot be found.</returns>
        </member>
        <member name="M:TD.SandDock.TabControl.TabPageCollection.Add(TD.SandDock.TabPage)">
            <summary>
            Adds a TabPage to the collection.
            </summary>
            <param name="tabPage">The TabPage to add.</param>
        </member>
        <member name="P:TD.SandDock.TabControl.TabPageCollection.Count">
            <summary>
            Gets the number of tab pages in the collection.
            </summary>
        </member>
        <member name="P:TD.SandDock.TabControl.TabPageCollection.Item(System.Int32)">
            <summary>
            Gets a TabPage in the collection.
            </summary>
        </member>
    </members>
</doc>
